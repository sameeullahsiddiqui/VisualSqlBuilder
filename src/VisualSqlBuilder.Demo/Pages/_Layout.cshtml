@using Microsoft.AspNetCore.Components.Web
@namespace VisualSqlBuilder.Demo.Pages
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Visual SQL Builder Demo</title>
    <base href="~/" />
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    
    <!-- Application CSS -->
    <link rel="stylesheet" href="css/site.css" />
    
    <!-- Component CSS -->
    <link rel="stylesheet" href="_content/VisualSqlBuilder.Core/visual-sql-builder.css" />
    
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <!-- Blazor SignalR -->
    <script src="_framework/blazor.server.js"></script>
    
    <!-- Bootstrap 5 JS (after Blazor) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Component JS (after Blazor) -->
    @* <script src="_content/VisualSqlBuilder.Core/visual-sql-builder.js"></script> *@
    
    <!-- Blazor reconnection UI -->
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    
    <script>
        // Monitor Blazor connection state
        if (window.Blazor) {
            let reconnectCount = 0;
            
            Blazor.defaultReconnectionHandler._reconnectionDisplay = {
                show: () => {
                    reconnectCount++;
                    console.log(`Reconnection attempt ${reconnectCount}`);
                },
                hide: () => {
                    reconnectCount = 0;
                    console.log('Reconnected successfully');
                },
                failed: () => {
                    console.error('Failed to reconnect');
                },
                rejected: () => {
                    console.error('Connection rejected');
                }
            };
        }
    </script>
</body>
</html>